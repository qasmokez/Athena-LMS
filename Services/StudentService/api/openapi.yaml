openapi: '3.0.3'

info:
  description: Athena-LMS Student Service
  version: 0.0.1
  title: Athena-LMS Student Service

servers:
  - url: http://localhost:3011/v0

paths:
  /user/profile:
    get:
      security:
        - bearerAuth: []         
      description: Get profile by student ID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/testObject'
        403:
          description: Unauthorized
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /user/honors:
      get:
        security:
          - bearerAuth: []         
        description: Get honors by student ID
        responses:
          200:
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/testObject'
          403:
            description: Unauthorized
          default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnexpectedError'
  /user/parents:
      get:
        security:
          - bearerAuth: []         
        description: Get all parents by student ID
        responses:
          200:
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/testArray'
          403:
            description: Unauthorized
          default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnexpectedError'
  /student/list:
    get:
      security:
        - bearerAuth: []
      description: Get a paginated list of students by class and grade
      parameters:
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/StudentList/properties/page'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/StudentList/properties/limit'
        - name: class_id
          in: query
          schema:
            $ref: '#/components/schemas/StudentList/properties/class_id'
        - name: grade_id
          in: query
          schema:
            $ref: '#/components/schemas/StudentList/properties/grade_id'
      responses:
        200:
          description: A paginated list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
        403:
          description: Unauthorized
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'

components:
  schemas:
    testObject:
      type: object
      additionalProperties: true
    testArray:
      type: array
      items:
        type: object
        additionalProperties: true
    UnexpectedError:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    User:
      type: object
      properties:
        name:
          type: string
        accessToken:
          type: string
      required:
        - name
        - accessToken
    Credentials:
      type: object
      properties:
        studentid:
          type: string
          pattern: '^\d{7}$'
          example: '1234567'
        password:
          type: string
      required:
        - studentid
        - password
      additionalProperties: false
    StudentList:
      type: object
      properties:
        page:
          type: string
        limit:
          type: string
        class_id: 
          type: string
        grade_id:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT