openapi: '3.0.3'

info:
  description: Athena-LMS Student Service
  version: 0.0.1
  title: Athena-LMS Student Service

servers:
  - url: http://localhost:3011/v0

paths:
  /user/profile:
    get:
      security:
        - bearerAuth: []         
      description: Get profile by student ID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/testObject'
        403:
          description: Unauthorized
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /user/honors:
      get:
        security:
          - bearerAuth: []         
        description: Get honors by student ID
        responses:
          200:
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/testObject'
          403:
            description: Unauthorized
          default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnexpectedError'
  /user/parents:
      get:
        security:
          - bearerAuth: []         
        description: Get all parents by student ID
        responses:
          200:
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/testArray'
          403:
            description: Unauthorized
          default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnexpectedError'
  
  /student/basicInfo:
    get:
      security:
        - bearerAuth: []
      description: Get a paginated list of students with filter and order
      parameters:
        - name: order
          in: query
          description: JSON object to specify ordering (e.g., '{"sex":"desc","classes_id":"asc"}')
          schema:
            type: string
        - name: filter
          in: query
          description: JSON object to specify filters (e.g., '{"classes_id":[1,2], "sex":["male"], "first_name":["tony"]}')
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of students to retrieve per page
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: A paginated list of students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicInfoResponse'
        403:
          description: Unauthorized
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'

components:
  schemas:
    testObject:
      type: object
      additionalProperties: true
    testArray:
      type: array
      items:
        type: object
        additionalProperties: true
    UnexpectedError:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    User:
      type: object
      properties:
        name:
          type: string
        accessToken:
          type: string
      required:
        - name
        - accessToken
    Credentials:
      type: object
      properties:
        studentid:
          type: string
          pattern: '^\d{7}$'
          example: '1234567'
        password:
          type: string
      required:
        - studentid
        - password
      additionalProperties: false

    BasicInfoResponse:
      type: array
      description: The response containing basic information of students.
      items:
        type: object
        properties:
          sex:
            type: string
            description: The gender of the student.
          name:
            type: string
            description: The full name of the student.
          classes_id:
            type: integer
            description: The class ID the student belongs to.
          grade_id:
            type: integer
            description: The grade ID of the student.
          birth_date:
            type: string
            format: date
            description: The birth date of the student.
          enroll_date:
            type: string
            format: date
            description: The enrollment date of the student.
          student_id:
            type: string
            description: The student ID.
          ethnic:
            type: string
            description: The ethnic of the student.
          id:
            type: string
            description: The internal UUID of the student.

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT